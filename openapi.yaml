openapi: 3.0.0
info:
  title: BR_Generator
  version: 0.0.1
servers:
  - url: http://localhost:8081
    description: Dev server
paths:
  /equipment_list:
    get:
      summary: Method for getting list of all equipment
      tags:
        - Equipment
      operationId: getAllEquipment
      responses:
        '200':
          description: Successful response with list of equipment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Equipments"
        'default':
          description: any resp different from 200ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /main_table/{eq}:
    get:
      summary: Method for getting codes for every type of equipment
      tags:
        - Equipment Code
      operationId: getCodes
      parameters:
        - in: path
          name: eq
          required: true
          description: Type of equipment
          schema:
            type: string
      responses:
        '200':
          description: Successful response with list of codes for given equipment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EquipmentCode"
        'default':
          description: Any response different from 200 OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /filter:
    post:
      summary: Method for filtering equipment activities
      tags:
        - Process Description
      operationId: filterEquipmentActivities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                equipmentType:
                  type: string
                  description: Type of equipment for filtering activities
                  example: reactor
      responses:
        '200':
          description: Successful response with filtered equipment activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EquipmentActivity"
        'default':
          description: Any response different from 200 OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


components:
  schemas:
    Equipment:
      type: object
      required:
        - name
      properties:
        equipment_code:
          type: string
          example: 002-10
        name:
          type: string
          example: reactor
        status:
          type: string
          enum:
            - operational
            - on-repair
            - broken
          description: Its condition
        maintenance:
          type: string
          format: date-time

    Equipments:
      type: array
      items:
        $ref: "#/components/schemas/Equipment"
    EquipmentCode:
      type: object
      required:
        - name
      properties:
        equipment_code:
          type: string
          example: 002-10
        name:
          type: string
          example: reactor
        status:
          type: string
          enum:
            - operational
            - on-repair
            - broken
          description: Its condition
        maintenance:
          type: string
          format: date-time
    EquipmentActivity:
      type: object
      required:
        - Equipment
        - OperationType
        - Content
      properties:
        Equipment:
          type: string
          description: Name of the equipment
        OperationType:
          type: string
          description: Type of operation/activity
        Content:
          type: string
          description: Description of the activity
          
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string

<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <!-- Your custom CSS -->
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/circularMenu.css">
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">

    <title>BMR main </title>

</head>

<body>
    <div>
        <!-- Include your header content here -->
        <%- include("partials/header.ejs") %>
    </div>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-lg-2">
                <!-- Include your sidebar content here -->
                <%- include("partials/sidebar.ejs") %>
            </div>
            
            <!-- Main content -->
            <div class="col-lg-9">
                


                <!-- Modal -->
                <% if(locals.localMemory){%>
                    <script>
                        // Check if sessionStorage is supported by the browser
                        if (typeof(Storage) !== "undefined") {
                            // Convert the localMemory variable to JSON string
                            var localMemoryJSON = <%= JSON.stringify(localMemory) %>;
                            console.log("localMemory:\n".localMemoryJSON);
                
                            // Store the JSON string in sessionStorage
                            sessionStorage.setItem("localMemory", localMemoryJSON);
                        } else {
                            // Browser doesn't support sessionStorage
                            console.error("Sorry, your browser does not support sessionStorage.");
                        }
                    </script>
            
                <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete <em> <strong><%= localMemory.projectName %> <%= localMemory.tp %> <%= localMemory.version %></strong> </em> batch record?
                            </div>
                            <div class="modal-footer">
                                <!-- Form to confirm deletion -->
                                <form action="/delete_br" method="post">
                                    <input type="hidden" name="projectName" value="<%= localMemory.projectName %>">
                                    <input type="hidden" name="tp" value="<%= localMemory.tp %>">
                                    <input type="hidden" name="version" value="<%= localMemory.version %>">
                                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                                </form>
                                <!-- Button to close modal -->
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                

                </div>
                <div>

                    <h2><%= localMemory.projectName %> <%= localMemory.tp %> <%= localMemory.version %></h2>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-danger mb-3" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                        DELETE current BR
                    </button>
                </div>
                <% } %>
                <div class="d-flex justify-content-center align-items-center" style="min-height: 10vh;">
                    <!-- Include your table content here -->
                    <!-- Table content -->
                    <table class="table table-bordered table-hover">
                        <!-- Table header -->
                        <thead>
                            <!-- Table header rows -->
                            <tr>
                                <th>Op.#</th>
                                <th>Description</th>
                                <th>Other</th>
                            </tr>
                        </thead>
                        <!-- Table body -->
                        <tbody>
                            <%- include("partials/contextMenu.ejs") %>
                            <!-- ______________Adding existing operations________________________ -->
                            <% if(locals.br_ops){%>
                                <% if(br_ops.length>0) {%>
                                    <% br_ops.forEach((operation, index)=> { %>
                                        <tr createCircularMenuForRow(this) >
                                            <!-- First column, op number with circular menu -->
                                            <td style="width: 3%; padding: 8px; margin: 0;" id="opNumber<%= operation.opNumber %>">
                                                <span><%= operation.opNumber %></span>
                                            </td>

                                            <td>
                                                <!-- Second column - Description -->
                                                <div id="description<%= operation.opNumber %>">
                                                    <textarea id="descriptionTextarea<%= operation.opNumber %>" class="form-control"
                                                        rows="1"><%= operation.typicalActivity.content %></textarea>
                                                </div>

                                            </td>

                                            <!-- ______________________________script to remove_____________________________________________ -->
                                            <script>
                                                // Function to adjust textarea height based on content
                                                function adjustTextareaHeight(textarea) {
                                                    textarea.style.height = 'auto'; // Reset height to auto
                                                    textarea.style.height = (textarea.scrollHeight + 1) + 'px'; // Set height to content height
                                                }

                                                // Get the textarea element
                                                var textarea = document.getElementById("descriptionTextarea<%= operation.opNumber %>");

                                                // Call the adjustTextareaHeight function when the content changes
                                                textarea.addEventListener('input', function () {
                                                    adjustTextareaHeight(textarea);
                                                });

                                                // Call the adjustTextareaHeight function initially
                                                adjustTextareaHeight(textarea);
                                            </script>
                                            <!-- ___________________________________________________________________________ -->

                                            <!-- 3rd column - OTHER -->
                                            <td style="width: 15%;">
                                                <!-- Other fields -->
                                                <div id="other<%= operation.opNumber %>">
                                                    <textarea id="otherTextarea<%= operation.opNumber %>" class="form-control"
                                                        rows="<%= operation.typicalActivity.other ? 4 : 1 %>"><%= operation.typicalActivity.other %></textarea>
                                                </div>
                                            </td>
                                            
                                        </tr>
                                        <% }) %>
                                    <% } %>
                                <% } %>

                                <% if(locals.br_ops){ %>
                                <!-- _______________________Filling new operation__________________________ -->
                                    <tr>
                                        <form action="/create_process_op" method="post">
                                            <% if (br_ops.length > 0) { %>
                                            <td style="width: 3%; padding: 8px; margin: 0;">
                                                <input type="number" class="form-control" id="opNumber" name="opNumber" value="<%= br_ops[br_ops.length-1].opNumber + 1 %>" readonly>
                                            </td>
                                            <% } else { %>
                                            <td style="width: 3%; padding: 8px; margin: 0;">
                                                <input type="number" class="form-control" id="opNumber" name="opNumber" value="1" readonly>
                                            </td>
                                            <% } %>

                                        
                                            <td>
                                                <div id="description">
                                                    <% if(locals.finalFormatContent){ %>
                                                        <%- finalFormatContent %>
                                                        <!-- Hidden input fields and button moved inside the form -->
                                                        <div class="text-center mt-4">
                                                            <input type="hidden" name="content" value="<%= locals.finalFormatContent %>">
                                                            <input type="hidden" name="mainEquipmentType" value="<%= locals.equipmentType %>">
                                                            <input type="hidden" name="activityType" value="<%= locals.activityType %>">
                                                            <input type="hidden" name="projectName" value="<%= locals.localMemory.projectName %>">
                                                            <input type="hidden" name="version" value="<%= locals.localMemory.version %>">
                                                            <input type="hidden" name="tp" value="<%= locals.localMemory.tp %>">
                                                            <button class="btn btn-primary">Create Operation</button>
                                                        </div>
                                                    <% } %>
                                                </div>
                                            
                                            </td>
                                        
                                            <td style="width: 10%;">
                                                <div id="other">
                                                    <% if(locals.other){ %>
                                                    <textarea name="other" id="other" cols="30" rows="10"><%= other %></textarea>
                                                    <% }else{ %>
                                                    <textarea name="other" id="other" cols="30" rows="10"></textarea>
                                                    <% } %>
                                                </div>
                                            </td>
                                        

                                        </form>
                                    </tr>
                                    
                        </tbody>
                    </table>
                </div>
                <% } %>
                <% if(locals.br_ops){ %>
                <!-- Equipment and Activity Type Selection, and Button to parse data -->
                <div id="equipmentSelection" class="row mt-3 ">
                    <form action="/get_description" method="POST" id="formForDescription">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="equipmentType">Equipment Type</label>
                                <select class="form-control" id="equipmentType" name="equipmentType">
                                    <option value="">--select--</option>
                                    <% 
                                        // Extract unique equipment types
                                        let uniqueEquipmentTypes = new Set();
                                        operationsMap.forEach(function(operation) {
                                            uniqueEquipmentTypes.add(operation.name);
                                        });
                                
                                        // Populate select element with unique equipment types
                                        uniqueEquipmentTypes.forEach(function(equipmentType) {
                                    %>
                                            <option value="<%= equipmentType %>"><%= equipmentType %></option>
                                    <% }); %>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group mb-5">
                                <label for="activityType">Type of Activity</label>
                                <select class="form-control" id="activityType" name="activityType">
                                    <option value="">--select--</option>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <% } %>
            <!-- Include your footer content here -->
                <%- include("partials/footer.ejs") %>
                
        </div>
    </div>

    // <script src="ot_scripts.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous">
    </script>
    

    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script>
        // Define a new JavaScript variable and assign it the value of operationsMap from EJS
        const operationsMapData = <%- JSON.stringify(operationsMap) %>;
    </script>

    <script>
        // Function to populate the "Type of Activity" select element based on the selected equipment type
        function populateActivityTypes() {
            // Clear existing options
            const activityTypeSelect = document.getElementById('activityType');
            activityTypeSelect.innerHTML = '<option value="">--select--</option>';

            // Get selected equipment type
            const selectedEquipment = document.getElementById('equipmentType').value;

            // Populate "Type of Activity" select element with operation types corresponding to the selected equipment
            operationsMapData.forEach(function(operation) {
                if (operation.name === selectedEquipment) {
                    operation.operations.forEach(function(desc) {
                        const option = document.createElement('option');
                        option.value = desc.operationType;
                        option.textContent = desc.operationType;
                        activityTypeSelect.appendChild(option);
                    });
                }
            });
        }

        // Add event listener for the change event on "Equipment Type" select element
        document.getElementById('equipmentType').addEventListener('change', populateActivityTypes);

        // Populate "Type of Activity" select element on page load
        populateActivityTypes();
    </script>

    <!-- JavaScript code to submit the form when activityType is changed -->
    <script>
        // Add an event listener to the change event of the activityType select element
        document.getElementById('activityType').addEventListener('change', function() {
            // Submit the form when the activityType is changed
            document.getElementById('formForDescription').submit();
        });
    </script>

    <script>
        // Function to focus on the equipment selection section
        function focusOnEquipmentSelection() {
            // Get the DOM element of the equipment selection section
            const equipmentSelectionSection = document.getElementById('equipmentSelection');

            // Scroll to the equipment selection section
            equipmentSelectionSection.scrollIntoView({ behavior: 'smooth' });
        }

        // Call the focusOnEquipmentSelection function when the page is loaded
        window.onload = focusOnEquipmentSelection;
    </script>


    <script>
        let trMemory;
        let projMemory;
        document.addEventListener('DOMContentLoaded', function() {
            // Get all table rows
            const tableRows = document.querySelectorAll('tr');

            // Get the context menu element
            const contextMenu = document.getElementById('contextMenu');

            // Add event listener to each row
            tableRows.forEach(row => {
                row.addEventListener('contextmenu', function(event) {
                    event.preventDefault(); // Prevent the default context menu from appearing
                    trMemory = row;                
                    // Show the custom context menu
                    contextMenu.style.display = 'block';
                    contextMenu.style.left = event.pageX + 'px';
                    contextMenu.style.top = event.pageY + 'px';

                    // Hide the context menu when clicking outside of it
                    document.addEventListener('click', hideContextMenu);
                });
            });
        });

        // Function to hide the context menu
        function hideContextMenu() {
            contextMenu.style.display = 'none';
            document.removeEventListener('click', hideContextMenu);
        }
    </script>

</body>

</html>